const abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'starport',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'spender',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'enum ItemType',
                name: 'itemType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'identifier',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SpentItem[]',
            name: 'spentItems',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct ApprovalAndBalanceValidator.ApprovalAndBalanceValidationInput',
        name: 'input',
        type: 'tuple',
      },
    ],
    stateMutability: 'payable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'returnType',
    outputs: [
      {
        internalType: 'string[]',
        name: 'errors',
        type: 'string[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const
const bytecode =
  '' as const
export const ApprovalAndBalanceValidator = {
  abi,
  bytecode,
  functionName: 'returnType' as const,
}

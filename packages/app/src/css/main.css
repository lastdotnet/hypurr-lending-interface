@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --body-background: 240 8% 5%;
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --muted: 0 0% 15.1%;
    --muted-foreground: 255 0% 100%;

    --popover: 0 0 0%;
    --popover-foreground: 210 40% 98%;

    --card: 0 0% 5%;
    --card-foreground: 255 0% 100%;

    --border: 0 0% 100%;
    --input: 0 0% 100%;
    --ring: 166 94% 81%;

    --primary-bg: 166 94% 81%;
    --primary-hover: 166 94% 71%;
    --primary: 166 94% 81%;
    --primary-foreground: 240 8% 5%;

    --secondary: 166 94% 81%;
    --secondary-foreground: 0 0% 100%;

    --accent: 0 0% 5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --nav-primary: 0 0% 100%;
    --nav-shadow: 0 0% 0%;

    --tooltip-shadow: rgba(9, 24, 44, 0.07);

    --radius: 1rem;

    --panel-border: 0 0% 100%;
    --panel-bg: 240 7% 8%;
    --input-background: 0 0% 100%;
    --icon-foreground: 106 118 146;

    --product-green: 93 189 176;
    --product-orange: 240 181 122;
    --product-blue: 95 190 177;
    --product-red: 248 116 189;

    --gradient-yellow: 252 229 114;
    --gradient-green: 161 252 231;

    --product-dai: 245 172 55;
    --product-sdai: 38 182 62;
    --prompt-foreground: #ffffff80;
    --success-background: #e2f1ec;
    --checkbox: #0b2140;
    --product-dark-blue: 37, 87, 214;

    --basics-black: 11 33 64;
    --basics-white: 255 255 255;
    --basics-border: rgba(35, 66, 84, 0.1);
    --basics-dark-grey: 106 118 146;
    --basics-grey: 217 217 217;
    --basics-light-grey: 249 249 251;
    --basics-green: 51 190 39;
    --basics-red: 220 38 38;
    --spark: 242 166 43;

    --main-blue: 64 102 239;
    --sec-green: 109 194 117;
    --gradient-border-base: oklch(70% 0.155 360);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-body text-foreground relative min-h-screen font-sans;
  }

  input {
    background: none;
    @apply slashed-zero;
  }

  .TooltipContent[data-side="bottom"] > span > svg {
    transform: translateY(100%);
  }
}

@layer utilities {
  /* Hide scrollbar for Chrome, Safari and Opera */
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  /* Hide scrollbar for IE, Edge and Firefox */
  .no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }
}

/**************** Friendly Captcha ***************** */
.frc-captcha,
.frc-container,
.frc-button {
  width: 100% !important;
}

.frc-text,
.frc-button,
.frc-banner > a,
.frc-banner > b {
  color: white !important;
}

.frc-captcha {
  background-color: transparent !important;
  border: none !important;
  max-width: unset !important;
}

.frc-icon {
  display: none;
}

.frc-text,
.frc-button,
.frc-banner > a,
.frc-banner > b {
  color: white !important;
}

.frc-captcha {
  background-color: transparent !important;
  border: none !important;
  max-width: unset !important;
}

.frc-icon {
  display: none;
}

.frc-content {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 4px;
}

.frc-text {
  font-size: 12px;
  opacity: 0.8;
}

.frc-button {
  background-color: hsl(var(--primary-bg)) !important;
  border-radius: 100px !important;
  padding: 7px 16px !important;
  font-weight: 600 !important;
  transition: background-color 0.2s ease-in-out !important;
  margin-bottom: 8px !important;
  font-size: 16px !important;
  line-height: 1.5 !important;
  color: hsl(var(--primary-foreground)) !important;
}

.frc-button:hover {
  background-color: hsl(var(--primary-hover)) !important;
}

.frc-banner {
  font-size: 10px;
  position: relative;
  right: unset !important;
}

.frc-banner > a,
.frc-banner > b {
  opacity: 0.6;
}

.connect-button:hover .connect-button-circle {
  opacity: 0.3;
  box-shadow: rgba(255, 255, 255, 0.05) 0px 1px 10px 0px inset;
  transform: translate(-50%, -4px);
}

.connect-button-circle {
  transform: translate(-50%, 0);
  opacity: 0.2;
  transition: all 0.3s ease-in-out;
  background-color: hsl(var(--primary-bg));
}

/**************** Gradient Border ***************** */
.gradient-border {
  --gradient-border-color: hsl(240 7% 18%);
  border-radius: 19px;
  border: calc(var(--border-width, 1.5) * 1px) solid #0000;
  outline: none;
  position: relative;
  cursor: pointer;
  transform-style: preserve-3d;
  transition: outline-color 1s;

  background:
    linear-gradient(#000 0 0) padding-box,
    linear-gradient(0deg, #0000 0, var(--gradient-border-color) 18px) border-box,
    linear-gradient(in lch longer hue 90deg, var(--gradient-border-base) 0 0)
      border-box 0 0 / 400% 100%;

  &,
  &::before,
  &::after {
    animation-composition: add;
    animation:
      rainbow 12s infinite linear,
      rainbow 6s infinite linear var(--state, paused);
  }

  &::after,
  &::before {
    content: "";
    position: absolute;
  }

  &::after {
    border: calc(var(--border-width, 2) * 1px) solid #0000;
    inset: -8px;
    border-radius: 14px;
    opacity: 0;

    background:
      linear-gradient(#0000 0 0) padding-box,
      linear-gradient(#0000 0 0) border-box,
      linear-gradient(in lch longer hue 90deg, var(--gradient-border-base) 0 0)
        border-box 0 0 / 400% 100%;
    mask: linear-gradient(#0000 0 0), linear-gradient(#fff 0 0);
    mask-clip: padding-box, border-box;
    mask-composite: intersect;
  }

  &::before {
    z-index: -2;
    filter: blur(calc(var(--blur, 10) * 1px))
      brightness(var(--brightness, 1.25));
    inset: 60% 0 0 0;
    border-radius: 50% 50% 8px 8px / 50% 50% 8px 8px;
    transform-origin: 50% 25%;
    opacity: 1;
    scale: 0.6 0.4;
    transform: translate3d(0, 0, -1px);
    transition:
      transform 1s,
      opacity 0s 1s,
      outline-color 1s,
      scale 0.25s;

    background:
      linear-gradient(#0000 0 0),
      linear-gradient(#0000 0 0),
      linear-gradient(in lch longer hue 90deg, var(--gradient-border-base) 0 0)
        border-box 0 0 / 400% 100%;
  }
}

.gradient-border:is(:hover, :focus-visible)::before {
  scale: 1.1 1.15;
}

.gradient-border:focus-visible::after {
  opacity: 0.6;
}

.gradient-border:is(:hover) {
  --state: running;
}

@keyframes rainbow {
  to {
    background-position:
      0 0,
      0 0,
      400% 0;
  }
}

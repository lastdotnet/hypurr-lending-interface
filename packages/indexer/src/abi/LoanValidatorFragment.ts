const abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: 'input',
        type: 'tuple',
        internalType: 'struct LoanValidationInput',
        components: [
          {
            name: 'validPricingModules',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'validStatusModules',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'validSettlementModules',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'expectedHoneymoon',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'expectedRecallWindow',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'starport',
            type: 'address',
            internalType: 'contract Starport',
          },
          {
            name: 'custodian',
            type: 'address',
            internalType: 'contract Custodian',
          },
          {
            name: 'loan',
            type: 'tuple',
            internalType: 'struct Starport.Loan',
            components: [
              {
                name: 'start',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'custodian',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'borrower',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'issuer',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'originator',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'collateral',
                type: 'tuple[]',
                internalType: 'struct SpentItem[]',
                components: [
                  {
                    name: 'itemType',
                    type: 'uint8',
                    internalType: 'enum ItemType',
                  },
                  {
                    name: 'token',
                    type: 'address',
                    internalType: 'address',
                  },
                  {
                    name: 'identifier',
                    type: 'uint256',
                    internalType: 'uint256',
                  },
                  {
                    name: 'amount',
                    type: 'uint256',
                    internalType: 'uint256',
                  },
                ],
              },
              {
                name: 'debt',
                type: 'tuple[]',
                internalType: 'struct SpentItem[]',
                components: [
                  {
                    name: 'itemType',
                    type: 'uint8',
                    internalType: 'enum ItemType',
                  },
                  {
                    name: 'token',
                    type: 'address',
                    internalType: 'address',
                  },
                  {
                    name: 'identifier',
                    type: 'uint256',
                    internalType: 'uint256',
                  },
                  {
                    name: 'amount',
                    type: 'uint256',
                    internalType: 'uint256',
                  },
                ],
              },
              {
                name: 'terms',
                type: 'tuple',
                internalType: 'struct Starport.Terms',
                components: [
                  {
                    name: 'status',
                    type: 'address',
                    internalType: 'address',
                  },
                  {
                    name: 'statusData',
                    type: 'bytes',
                    internalType: 'bytes',
                  },
                  {
                    name: 'pricing',
                    type: 'address',
                    internalType: 'address',
                  },
                  {
                    name: 'pricingData',
                    type: 'bytes',
                    internalType: 'bytes',
                  },
                  {
                    name: 'settlement',
                    type: 'address',
                    internalType: 'address',
                  },
                  {
                    name: 'settlementData',
                    type: 'bytes',
                    internalType: 'bytes',
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'returnType',
    inputs: [],
    outputs: [
      {
        name: 'errors',
        type: 'string[]',
        internalType: 'string[]',
      },
    ],
    stateMutability: 'nonpayable',
  },
] as const
const bytecode =
  '' as const
export const LoanValidatorFragment = {
  abi,
  bytecode,
  functionName: 'returnType' as const,
}
